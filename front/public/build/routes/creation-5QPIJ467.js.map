{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/routes/creation.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/routes/creation.tsx\"\n);\nimport.meta.hot.lastModified = \"1709240763589.1174\";\n}\n// REMIX HMR END\n\n//export async function loader(){}\nimport { Form, useActionData } from \"@remix-run/react\"\nimport type { ActionFunctionArgs } from \"@remix-run/node\"\nimport { redirect } from \"@remix-run/node\"\nimport React from \"react\"\nimport axios from \"axios\"\n\nexport default function creation() {\n    //const data = useActionData<typeof action>()\n    return (\n        <div className=\"flex justify-center content-center h-screen\">\n            <div className=\" mt-8 w-auto h-1/2 overflow-hidden shadow-xl p-10 rounded-3xl border border-black\">\n                <h1 className=\"justify-center text-2xl text-center pb-6\">\n                    Cr\u00E9ation de stock\n                </h1>\n                <Form method=\"post\">\n                    <label className=\"block\">\n                        <span className=\"text-gray-700\">Nom</span>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"nom de l'entreprise\"\n                            className=\"mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0 mb-5\"\n                        />\n                    </label>\n\n                    <label className=\"block\">\n                        <span className=\"text-gray-700\">Montant</span>\n                        <input\n                            min=\"0\"\n                            step=\"0.01\"\n                            type=\"number\"\n                            name=\"price\"\n                            placeholder=\"valeur de l'action\"\n                            className=\"mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0 mb-5\"\n                        />\n                    </label>\n\n                    <label className=\"block\">\n                        <span className=\"text-gray-700\">Quantit\u00E9</span>\n                        <input\n                            min=\"0\"\n                            type=\"number\"\n                            name=\"quantity\"\n                            placeholder=\"quantit\u00E9 disponible\"\n                            className=\"mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0 mb-5\"\n                        />\n                    </label>\n                    <div className=\"flex justify-center\">\n                        <button\n                            type=\"submit\"\n                            className=\" m-3  text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\"\n                        >\n                            Valider\n                        </button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n//ici : enregistrer les donn\u00E9es du formulaire et renvoyer \u00E0 l'accueil ou l'inventaire\n// export async function action(requete) {\n//     const formData = await requete.formData()\n// }\n\nexport async function action({ request }: ActionFunctionArgs) {\n    const formData = await request.formData()\n    const name = formData.get(\"name\")\n    const price = formData.get(\"price\")\n    const quantity = formData.get(\"quantity\")\n\n    if (name && price && quantity) {\n        // Effectuez les actions n\u00E9cessaires, comme enregistrer les donn\u00E9es en base de donn\u00E9es\n        try {\n            axios.post(\"http://localhost:8000/api/articles/\", {\n                designation: name,\n                prix_unitaire: price,\n                quantite: quantity,\n            })\n        } catch (error) {}\n\n        // Redirection vers la page d'accueil apr\u00E8s soumission du formulaire\n        return redirect(\"/inventaire\")\n    } else {\n        // G\u00E9rer les cas o\u00F9 les donn\u00E9es du formulaire sont invalides\n        console.error(\"Les donn\u00E9es du formulaire sont incompl\u00E8tes.\")\n        // Retournez une r\u00E9ponse avec un message d'erreur ou une redirection vers une autre page\n        return redirect(\"/erreur\")\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACclB,kBAAyB;AAST;AArBhB,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAUe,SAAR,WAA4B;AAE/B,SACI,mDAAC,SAAI,WAAU,+CACX,6DAAC,SAAI,WAAU,qFACX;AAAA,uDAAC,QAAG,WAAU,4CAA2C,oCAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAK,QAAO,QACT;AAAA,yDAAC,WAAM,WAAU,SACb;AAAA,2DAAC,UAAK,WAAU,iBAAgB,mBAAhC;AAAA;AAAA;AAAA;AAAA,eAAmC;AAAA,QACnC;AAAA,UAAC;AAAA;AAAA,YACG,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,WAAU;AAAA;AAAA,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,WAPJ;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MAEA,mDAAC,WAAM,WAAU,SACb;AAAA,2DAAC,UAAK,WAAU,iBAAgB,uBAAhC;AAAA;AAAA;AAAA;AAAA,eAAuC;AAAA,QACvC;AAAA,UAAC;AAAA;AAAA,YACG,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,WAAU;AAAA;AAAA,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA;AAAA,WATJ;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MAEA,mDAAC,WAAM,WAAU,SACb;AAAA,2DAAC,UAAK,WAAU,iBAAgB,2BAAhC;AAAA;AAAA;AAAA;AAAA,eAAwC;AAAA,QACxC;AAAA,UAAC;AAAA;AAAA,YACG,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,WAAU;AAAA;AAAA,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA;AAAA,WARJ;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,mDAAC,SAAI,WAAU,uBACX;AAAA,QAAC;AAAA;AAAA,UACG,MAAK;AAAA,UACL,WAAU;AAAA,UACb;AAAA;AAAA,QAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,KANJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,SAxCJ;AAAA;AAAA;AAAA;AAAA,WAyCA;AAAA,OA7CJ;AAAA;AAAA;AAAA;AAAA,SA8CA,KA/CJ;AAAA;AAAA;AAAA;AAAA,SAgDA;AAER;",
  "names": []
}
